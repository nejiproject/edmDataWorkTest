<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataWorkDataSet" targetNamespace="http://tempuri.org/DataWorkDataSet.xsd" xmlns:mstns="http://tempuri.org/DataWorkDataSet.xsd" xmlns="http://tempuri.org/DataWorkDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataWorkConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataWorkConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.edmDataWorkTest.Properties.Settings.GlobalReference.Default.DataWorkConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DivisionSetTableAdapter" GeneratorDataComponentClassName="DivisionSetTableAdapter" Name="DivisionSet" UserDataComponentName="DivisionSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataWorkConnectionString (Settings)" DbObjectName="DataWork.dbo.DivisionSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DivisionSet] WHERE (([DivisionId] = @Original_DivisionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DivisionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DivisionSet] ([Name]) VALUES (@Name);
SELECT DivisionId, Name FROM DivisionSet WHERE (DivisionId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DivisionId, Name FROM dbo.DivisionSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DivisionSet] SET [Name] = @Name WHERE (([DivisionId] = @Original_DivisionId));
SELECT DivisionId, Name FROM DivisionSet WHERE (DivisionId = @DivisionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DivisionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DivisionId" ColumnName="DivisionId" DataSourceName="DataWork.dbo.DivisionSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DivisionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DivisionId" DataSetColumn="DivisionId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkerSetTableAdapter" GeneratorDataComponentClassName="WorkerSetTableAdapter" Name="WorkerSet" UserDataComponentName="WorkerSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataWorkConnectionString (Settings)" DbObjectName="DataWork.dbo.WorkerSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[WorkerSet] WHERE (([WorkerId] = @Original_WorkerId) AND ([Division_DivisionId] = @Original_Division_DivisionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Division_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Division_DivisionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WorkerSet] ([Name], [Age], [Division_DivisionId]) VALUES (@Name, @Age, @Division_DivisionId);
SELECT WorkerId, Name, Age, Division_DivisionId FROM WorkerSet WHERE (WorkerId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Division_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Division_DivisionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WorkerId, Name, Age, Division_DivisionId FROM dbo.WorkerSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[WorkerSet] SET [Name] = @Name, [Age] = @Age, [Division_DivisionId] = @Division_DivisionId WHERE (([WorkerId] = @Original_WorkerId) AND ([Division_DivisionId] = @Original_Division_DivisionId));
SELECT WorkerId, Name, Age, Division_DivisionId FROM WorkerSet WHERE (WorkerId = @WorkerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Division_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Division_DivisionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Division_DivisionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Division_DivisionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WorkerId" ColumnName="WorkerId" DataSourceName="DataWork.dbo.WorkerSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerId" DataSetColumn="WorkerId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Age" DataSetColumn="Age" />
              <Mapping SourceColumn="Division_DivisionId" DataSetColumn="Division_DivisionId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataWorkDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataWorkDataSet" msprop:Generator_UserDSName="DataWorkDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DivisionSet" msprop:Generator_TableClassName="DivisionSetDataTable" msprop:Generator_TableVarName="tableDivisionSet" msprop:Generator_TablePropName="DivisionSet" msprop:Generator_RowDeletingName="DivisionSetRowDeleting" msprop:Generator_RowChangingName="DivisionSetRowChanging" msprop:Generator_RowEvHandlerName="DivisionSetRowChangeEventHandler" msprop:Generator_RowDeletedName="DivisionSetRowDeleted" msprop:Generator_UserTableName="DivisionSet" msprop:Generator_RowChangedName="DivisionSetRowChanged" msprop:Generator_RowEvArgName="DivisionSetRowChangeEvent" msprop:Generator_RowClassName="DivisionSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DivisionId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnDivisionId" msprop:Generator_ColumnPropNameInRow="DivisionId" msprop:Generator_ColumnPropNameInTable="DivisionIdColumn" msprop:Generator_UserColumnName="DivisionId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WorkerSet" msprop:Generator_TableClassName="WorkerSetDataTable" msprop:Generator_TableVarName="tableWorkerSet" msprop:Generator_TablePropName="WorkerSet" msprop:Generator_RowDeletingName="WorkerSetRowDeleting" msprop:Generator_RowChangingName="WorkerSetRowChanging" msprop:Generator_RowEvHandlerName="WorkerSetRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkerSetRowDeleted" msprop:Generator_UserTableName="WorkerSet" msprop:Generator_RowChangedName="WorkerSetRowChanged" msprop:Generator_RowEvArgName="WorkerSetRowChangeEvent" msprop:Generator_RowClassName="WorkerSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnWorkerId" msprop:Generator_ColumnPropNameInRow="WorkerId" msprop:Generator_ColumnPropNameInTable="WorkerIdColumn" msprop:Generator_UserColumnName="WorkerId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Age" msprop:Generator_ColumnVarNameInTable="columnAge" msprop:Generator_ColumnPropNameInRow="Age" msprop:Generator_ColumnPropNameInTable="AgeColumn" msprop:Generator_UserColumnName="Age">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Division_DivisionId" msprop:Generator_ColumnVarNameInTable="columnDivision_DivisionId" msprop:Generator_ColumnPropNameInRow="Division_DivisionId" msprop:Generator_ColumnPropNameInTable="Division_DivisionIdColumn" msprop:Generator_UserColumnName="Division_DivisionId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DivisionSet" />
      <xs:field xpath="mstns:DivisionId" />
    </xs:unique>
    <xs:unique name="WorkerSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WorkerSet" />
      <xs:field xpath="mstns:WorkerId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DivisionWorker" msdata:parent="DivisionSet" msdata:child="WorkerSet" msdata:parentkey="DivisionId" msdata:childkey="Division_DivisionId" msprop:Generator_UserChildTable="WorkerSet" msprop:Generator_ChildPropName="GetWorkerSetRows" msprop:Generator_UserRelationName="FK_DivisionWorker" msprop:Generator_ParentPropName="DivisionSetRow" msprop:Generator_RelationVarName="relationFK_DivisionWorker" msprop:Generator_UserParentTable="DivisionSet" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>